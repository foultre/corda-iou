buildscript {
    ext.corda_release_version = '3.3-corda'
    ext.corda_release_distribution = 'net.corda'
    ext.corda_gradle_plugins_version = '3.2.1'
    ext.kotlin_version = '1.1.60'
    ext.junit_version = '4.12'
    ext.quasar_version = '0.7.9'
    ext.jolokia_version = '1.3.7'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://dl.bintray.com/kotlin/exposed' }
        maven { url 'https://jitpack.io' }
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:publish-utils:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
    }
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url 'https://dl.bintray.com/kotlin/exposed' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }

}

apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.publish-utils'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'
apply plugin: 'maven-publish'

sourceSets {
    main {
        resources {
            srcDir "config/dev"
        }
    }
    test {
        resources {
            srcDir "config/test"
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"

    // Corda integration dependencies
    cordaCompile "$corda_release_distribution:corda-core:$corda_release_version"
    cordaCompile "$corda_release_distribution:corda-finance:$corda_release_version"
    cordaCompile "$corda_release_distribution:corda-jackson:$corda_release_version"
    cordaCompile "$corda_release_distribution:corda-rpc:$corda_release_version"
    cordaCompile "$corda_release_distribution:corda-node-api:$corda_release_version"
    cordaCompile "$corda_release_distribution:corda-webserver-impl:$corda_release_version"
    cordaRuntime "$corda_release_distribution:corda:$corda_release_version"
    cordaRuntime "$corda_release_distribution:corda-webserver:$corda_release_version"

    testCompile "$corda_release_distribution:corda-test-utils:$corda_release_version"
    testCompile "$corda_release_distribution:corda-node-driver:$corda_release_version"


    // GraphStream: For visualisation (required by TemplateClientRPC app)
    compile "org.graphstream:gs-core:1.3"
    compile("org.graphstream:gs-ui:1.3") {
        exclude group: "bouncycastle"
    }

    // CorDapp dependencies
    // Specify your cordapp's dependencies below, including dependent cordapps
    cordapp "$corda_release_distribution:corda-finance:$corda_release_version"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        languageVersion = "1.1"
        apiVersion = "1.1"
        jvmTarget = "1.8"
        javaParameters = true   // Useful for reflection.
    }
}

def rpcUsersList = [
        ['username' : "user1",
         'password' : "password",
         'permissions' : ["ALL"]]
]

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {
    delete "./build/nodes"
    directory "./build/nodes"

    node {
        name "O=Notary,L=London,C=GB"
        notary = [validating: false]
        p2pAddress "localhost:10002"
        h2Port 11000
        rpcSettings {
            address("localhost:10004")
            adminAddress("localhost:10038")
        }
        cordapps = ["$corda_release_distribution:corda-finance:$corda_release_version"]
    }
    node {
        name "O=ParticipantA,L=London,C=GB"
        p2pAddress "localhost:10005"
        webPort 8000
        h2Port 11001
        cordapps = ["$corda_release_distribution:corda-finance:$corda_release_version"]
        rpcSettings {
            useSsl false
            standAloneBroker false
            address "localhost:10006"
            adminAddress "localhost:10016"
        }
        rpcUsers = rpcUsersList
    }
    node {
        name "O=ParticipantB,L=New York,C=US"
        p2pAddress "localhost:10008"
        webPort 8001
        h2Port 11002
        cordapps = ["$corda_release_distribution:corda-finance:$corda_release_version"]
        rpcSettings {
            useSsl false
            standAloneBroker false
            address "0.0.0.0:10009"
            adminAddress "0.0.0.0:10019"
        }
        rpcUsers = rpcUsersList
    }
    node {
        name "O=ParticipantC,L=New York,C=US"
        p2pPort 10011
        webPort 8002
        h2Port 11003
        cordapps = ["$corda_release_distribution:corda-finance:$corda_release_version"]
        rpcSettings {
            useSsl false
            standAloneBroker false
            address "0.0.0.0:10012"
            adminAddress "0.0.0.0:10022"
        }
        rpcUsers = rpcUsersList
    }
}

idea {
    module {
        downloadJavadoc = true // defaults to false
        downloadSources = true
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}